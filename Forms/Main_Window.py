# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'C:\Users\rammc\Documents\Pycharm3\BDO_Enhancement_Tool\Forms\Main_Window.ui'
#
# Created by: PyQt5 UI code generator 5.9.2
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1124, 735)
        MainWindow.setAcceptDrops(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout.setContentsMargins(8, 8, 8, 8)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.centralwidget)
        font = QtGui.QFont()
        font.setFamily("OCR A Extended")
        font.setPointSize(24)
        font.setBold(True)
        font.setWeight(75)
        self.label.setFont(font)
        self.label.setText("")
        self.label.setPixmap(QtGui.QPixmap("../../../../.designer/backup/title.png"))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.tabWidget = QtWidgets.QTabWidget(self.centralwidget)
        font = QtGui.QFont()
        font.setPointSize(11)
        self.tabWidget.setFont(font)
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.West)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setIconSize(QtCore.QSize(32, 32))
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_mp = QtWidgets.QWidget()
        self.tab_mp.setObjectName("tab_mp")
        self.verticalLayout_5 = QtWidgets.QVBoxLayout(self.tab_mp)
        self.verticalLayout_5.setObjectName("verticalLayout_5")
        self.scrollArea = QtWidgets.QScrollArea(self.tab_mp)
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 1040, 596))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.verticalLayout_8 = QtWidgets.QVBoxLayout(self.scrollAreaWidgetContents)
        self.verticalLayout_8.setObjectName("verticalLayout_8")
        self.widget_4 = QtWidgets.QWidget(self.scrollAreaWidgetContents)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_4.sizePolicy().hasHeightForWidth())
        self.widget_4.setSizePolicy(sizePolicy)
        self.widget_4.setObjectName("widget_4")
        self.gridLayout = QtWidgets.QGridLayout(self.widget_4)
        self.gridLayout.setContentsMargins(8, 8, 8, 8)
        self.gridLayout.setObjectName("gridLayout")
        self.spinValuePack = NonScrollDoubleSpin(self.widget_4)
        self.spinValuePack.setMaximum(1.0)
        self.spinValuePack.setSingleStep(0.01)
        self.spinValuePack.setProperty("value", 0.3)
        self.spinValuePack.setObjectName("spinValuePack")
        self.gridLayout.addWidget(self.spinValuePack, 13, 2, 1, 1)
        self.lblDragonScalePic = QtWidgets.QLabel(self.widget_4)
        self.lblDragonScalePic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblDragonScalePic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblDragonScalePic.setText("")
        self.lblDragonScalePic.setObjectName("lblDragonScalePic")
        self.gridLayout.addWidget(self.lblDragonScalePic, 10, 0, 1, 1)
        self.lblMarketTaxPic = QtWidgets.QLabel(self.widget_4)
        self.lblMarketTaxPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblMarketTaxPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblMarketTaxPic.setText("")
        self.lblMarketTaxPic.setObjectName("lblMarketTaxPic")
        self.gridLayout.addWidget(self.lblMarketTaxPic, 11, 0, 1, 1)
        self.lblDragonScale = QtWidgets.QLabel(self.widget_4)
        self.lblDragonScale.setObjectName("lblDragonScale")
        self.gridLayout.addWidget(self.lblDragonScale, 10, 1, 1, 1)
        self.spin_Cost_MemFrag = NoScrollSpin(self.widget_4)
        self.spin_Cost_MemFrag.setProperty("showGroupSeparator", True)
        self.spin_Cost_MemFrag.setMaximum(999999999)
        self.spin_Cost_MemFrag.setObjectName("spin_Cost_MemFrag")
        self.gridLayout.addWidget(self.spin_Cost_MemFrag, 6, 2, 1, 1)
        self.chkMerchantsRingPic = QtWidgets.QLabel(self.widget_4)
        self.chkMerchantsRingPic.setMinimumSize(QtCore.QSize(32, 32))
        self.chkMerchantsRingPic.setMaximumSize(QtCore.QSize(32, 32))
        self.chkMerchantsRingPic.setText("")
        self.chkMerchantsRingPic.setObjectName("chkMerchantsRingPic")
        self.gridLayout.addWidget(self.chkMerchantsRingPic, 14, 0, 1, 1)
        self.chkValuePackPic = QtWidgets.QLabel(self.widget_4)
        self.chkValuePackPic.setMinimumSize(QtCore.QSize(32, 32))
        self.chkValuePackPic.setMaximumSize(QtCore.QSize(32, 32))
        self.chkValuePackPic.setText("")
        self.chkValuePackPic.setObjectName("chkValuePackPic")
        self.gridLayout.addWidget(self.chkValuePackPic, 13, 0, 1, 1)
        self.spinMerchantsRing = NonScrollDoubleSpin(self.widget_4)
        self.spinMerchantsRing.setMaximum(1.0)
        self.spinMerchantsRing.setSingleStep(0.01)
        self.spinMerchantsRing.setProperty("value", 0.05)
        self.spinMerchantsRing.setObjectName("spinMerchantsRing")
        self.gridLayout.addWidget(self.spinMerchantsRing, 14, 2, 1, 1)
        self.spin_Cost_ConcArmor = NoScrollSpin(self.widget_4)
        self.spin_Cost_ConcArmor.setProperty("showGroupSeparator", True)
        self.spin_Cost_ConcArmor.setMaximum(999999999)
        self.spin_Cost_ConcArmor.setObjectName("spin_Cost_ConcArmor")
        self.gridLayout.addWidget(self.spin_Cost_ConcArmor, 3, 2, 1, 1)
        self.lblBlackStoneWeapon = QtWidgets.QLabel(self.widget_4)
        self.lblBlackStoneWeapon.setObjectName("lblBlackStoneWeapon")
        self.gridLayout.addWidget(self.lblBlackStoneWeapon, 0, 1, 1, 1)
        self.lblGearCleansePic = QtWidgets.QLabel(self.widget_4)
        self.lblGearCleansePic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblGearCleansePic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblGearCleansePic.setText("")
        self.lblGearCleansePic.setObjectName("lblGearCleansePic")
        self.gridLayout.addWidget(self.lblGearCleansePic, 9, 0, 1, 1)
        self.lblHard = QtWidgets.QLabel(self.widget_4)
        self.lblHard.setObjectName("lblHard")
        self.gridLayout.addWidget(self.lblHard, 4, 1, 1, 1)
        self.lblConcBlackStoneWeaponPic = QtWidgets.QLabel(self.widget_4)
        self.lblConcBlackStoneWeaponPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblConcBlackStoneWeaponPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblConcBlackStoneWeaponPic.setText("")
        self.lblConcBlackStoneWeaponPic.setObjectName("lblConcBlackStoneWeaponPic")
        self.gridLayout.addWidget(self.lblConcBlackStoneWeaponPic, 2, 0, 1, 1)
        self.spin_Cost_BlackStone_Armor = NoScrollSpin(self.widget_4)
        self.spin_Cost_BlackStone_Armor.setProperty("showGroupSeparator", True)
        self.spin_Cost_BlackStone_Armor.setMaximum(999999999)
        self.spin_Cost_BlackStone_Armor.setObjectName("spin_Cost_BlackStone_Armor")
        self.gridLayout.addWidget(self.spin_Cost_BlackStone_Armor, 1, 2, 1, 1)
        self.lblSharp = QtWidgets.QLabel(self.widget_4)
        self.lblSharp.setObjectName("lblSharp")
        self.gridLayout.addWidget(self.lblSharp, 5, 1, 1, 1)
        self.spin_Cost_BlackStone_Weapon = NoScrollSpin(self.widget_4)
        self.spin_Cost_BlackStone_Weapon.setProperty("showGroupSeparator", True)
        self.spin_Cost_BlackStone_Weapon.setMaximum(999999999)
        self.spin_Cost_BlackStone_Weapon.setObjectName("spin_Cost_BlackStone_Weapon")
        self.gridLayout.addWidget(self.spin_Cost_BlackStone_Weapon, 0, 2, 1, 1)
        self.spin_Cost_Cron = NoScrollSpin(self.widget_4)
        self.spin_Cost_Cron.setProperty("showGroupSeparator", True)
        self.spin_Cost_Cron.setMaximum(999999999)
        self.spin_Cost_Cron.setObjectName("spin_Cost_Cron")
        self.gridLayout.addWidget(self.spin_Cost_Cron, 8, 2, 1, 1)
        self.lblBlackStoneArmorPic = QtWidgets.QLabel(self.widget_4)
        self.lblBlackStoneArmorPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblBlackStoneArmorPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblBlackStoneArmorPic.setText("")
        self.lblBlackStoneArmorPic.setObjectName("lblBlackStoneArmorPic")
        self.gridLayout.addWidget(self.lblBlackStoneArmorPic, 1, 0, 1, 1)
        self.lblBlackStoneArmor = QtWidgets.QLabel(self.widget_4)
        self.lblBlackStoneArmor.setObjectName("lblBlackStoneArmor")
        self.gridLayout.addWidget(self.lblBlackStoneArmor, 1, 1, 1, 1)
        self.lblQuestFSInc = QtWidgets.QLabel(self.widget_4)
        self.lblQuestFSInc.setObjectName("lblQuestFSInc")
        self.gridLayout.addWidget(self.lblQuestFSInc, 12, 1, 1, 1)
        self.spinQuestFSInc = NoScrollSpin(self.widget_4)
        self.spinQuestFSInc.setMaximum(10)
        self.spinQuestFSInc.setObjectName("spinQuestFSInc")
        self.gridLayout.addWidget(self.spinQuestFSInc, 12, 2, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.gridLayout.addItem(spacerItem, 15, 2, 1, 1)
        self.spin_Cost_Dragon_Scale = NoScrollSpin(self.widget_4)
        self.spin_Cost_Dragon_Scale.setProperty("showGroupSeparator", True)
        self.spin_Cost_Dragon_Scale.setMaximum(999999999)
        self.spin_Cost_Dragon_Scale.setObjectName("spin_Cost_Dragon_Scale")
        self.gridLayout.addWidget(self.spin_Cost_Dragon_Scale, 10, 2, 1, 1)
        self.lblBlackStoneWeaponPic = QtWidgets.QLabel(self.widget_4)
        self.lblBlackStoneWeaponPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblBlackStoneWeaponPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblBlackStoneWeaponPic.setText("")
        self.lblBlackStoneWeaponPic.setObjectName("lblBlackStoneWeaponPic")
        self.gridLayout.addWidget(self.lblBlackStoneWeaponPic, 0, 0, 1, 1)
        self.lblQuestFSIncPic = QtWidgets.QLabel(self.widget_4)
        self.lblQuestFSIncPic.setText("")
        self.lblQuestFSIncPic.setObjectName("lblQuestFSIncPic")
        self.gridLayout.addWidget(self.lblQuestFSIncPic, 12, 0, 1, 1)
        self.chkMerchantsRing = QtWidgets.QCheckBox(self.widget_4)
        self.chkMerchantsRing.setObjectName("chkMerchantsRing")
        self.gridLayout.addWidget(self.chkMerchantsRing, 14, 1, 1, 1)
        self.lblConcBlackStoneWeapon = QtWidgets.QLabel(self.widget_4)
        self.lblConcBlackStoneWeapon.setObjectName("lblConcBlackStoneWeapon")
        self.gridLayout.addWidget(self.lblConcBlackStoneWeapon, 2, 1, 1, 1)
        self.lblGearCleanse = QtWidgets.QLabel(self.widget_4)
        self.lblGearCleanse.setObjectName("lblGearCleanse")
        self.gridLayout.addWidget(self.lblGearCleanse, 9, 1, 1, 1)
        self.spinMarketTax = NonScrollDoubleSpin(self.widget_4)
        self.spinMarketTax.setDecimals(4)
        self.spinMarketTax.setMaximum(1.0)
        self.spinMarketTax.setSingleStep(0.1)
        self.spinMarketTax.setProperty("value", 0.65)
        self.spinMarketTax.setObjectName("spinMarketTax")
        self.gridLayout.addWidget(self.spinMarketTax, 11, 2, 1, 1)
        self.spin_Cost_Conc_Weapon = NoScrollSpin(self.widget_4)
        self.spin_Cost_Conc_Weapon.setProperty("showGroupSeparator", True)
        self.spin_Cost_Conc_Weapon.setMaximum(999999999)
        self.spin_Cost_Conc_Weapon.setObjectName("spin_Cost_Conc_Weapon")
        self.gridLayout.addWidget(self.spin_Cost_Conc_Weapon, 2, 2, 1, 1)
        self.lblConcBlackStoneArmorPic = QtWidgets.QLabel(self.widget_4)
        self.lblConcBlackStoneArmorPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblConcBlackStoneArmorPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblConcBlackStoneArmorPic.setText("")
        self.lblConcBlackStoneArmorPic.setObjectName("lblConcBlackStoneArmorPic")
        self.gridLayout.addWidget(self.lblConcBlackStoneArmorPic, 3, 0, 1, 1)
        self.lblConcBlackStoneArmor = QtWidgets.QLabel(self.widget_4)
        self.lblConcBlackStoneArmor.setObjectName("lblConcBlackStoneArmor")
        self.gridLayout.addWidget(self.lblConcBlackStoneArmor, 3, 1, 1, 1)
        self.lblMemoryFragment = QtWidgets.QLabel(self.widget_4)
        self.lblMemoryFragment.setObjectName("lblMemoryFragment")
        self.gridLayout.addWidget(self.lblMemoryFragment, 6, 1, 1, 1)
        self.lblMemoryFragmentPic = QtWidgets.QLabel(self.widget_4)
        self.lblMemoryFragmentPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblMemoryFragmentPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblMemoryFragmentPic.setText("")
        self.lblMemoryFragmentPic.setObjectName("lblMemoryFragmentPic")
        self.gridLayout.addWidget(self.lblMemoryFragmentPic, 6, 0, 1, 1)
        self.lblCronStone = QtWidgets.QLabel(self.widget_4)
        self.lblCronStone.setObjectName("lblCronStone")
        self.gridLayout.addWidget(self.lblCronStone, 8, 1, 1, 1)
        self.lblCronStonePic = QtWidgets.QLabel(self.widget_4)
        self.lblCronStonePic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblCronStonePic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblCronStonePic.setText("")
        self.lblCronStonePic.setObjectName("lblCronStonePic")
        self.gridLayout.addWidget(self.lblCronStonePic, 8, 0, 1, 1)
        self.spin_Cost_Cleanse = NoScrollSpin(self.widget_4)
        self.spin_Cost_Cleanse.setProperty("showGroupSeparator", True)
        self.spin_Cost_Cleanse.setMaximum(999999999)
        self.spin_Cost_Cleanse.setObjectName("spin_Cost_Cleanse")
        self.gridLayout.addWidget(self.spin_Cost_Cleanse, 9, 2, 1, 1)
        self.chkValuePack = QtWidgets.QCheckBox(self.widget_4)
        self.chkValuePack.setObjectName("chkValuePack")
        self.gridLayout.addWidget(self.chkValuePack, 13, 1, 1, 1)
        self.lblMarketTax = QtWidgets.QLabel(self.widget_4)
        self.lblMarketTax.setObjectName("lblMarketTax")
        self.gridLayout.addWidget(self.lblMarketTax, 11, 1, 1, 1)
        self.spinSharp = NoScrollSpin(self.widget_4)
        self.spinSharp.setProperty("showGroupSeparator", True)
        self.spinSharp.setMaximum(999999999)
        self.spinSharp.setObjectName("spinSharp")
        self.gridLayout.addWidget(self.spinSharp, 5, 2, 1, 1)
        self.lblSharpPic = QtWidgets.QLabel(self.widget_4)
        self.lblSharpPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblSharpPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblSharpPic.setText("")
        self.lblSharpPic.setObjectName("lblSharpPic")
        self.gridLayout.addWidget(self.lblSharpPic, 5, 0, 1, 1)
        self.spinHard = NoScrollSpin(self.widget_4)
        self.spinHard.setProperty("showGroupSeparator", True)
        self.spinHard.setMaximum(999999999)
        self.spinHard.setObjectName("spinHard")
        self.gridLayout.addWidget(self.spinHard, 4, 2, 1, 1)
        self.lblHardPic = QtWidgets.QLabel(self.widget_4)
        self.lblHardPic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblHardPic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblHardPic.setText("")
        self.lblHardPic.setObjectName("lblHardPic")
        self.gridLayout.addWidget(self.lblHardPic, 4, 0, 1, 1)
        self.lblCaphStone = QtWidgets.QLabel(self.widget_4)
        self.lblCaphStone.setObjectName("lblCaphStone")
        self.gridLayout.addWidget(self.lblCaphStone, 7, 1, 1, 1)
        self.spin_Cost_CaphStone = NoScrollSpin(self.widget_4)
        self.spin_Cost_CaphStone.setProperty("showGroupSeparator", True)
        self.spin_Cost_CaphStone.setMaximum(999999999)
        self.spin_Cost_CaphStone.setObjectName("spin_Cost_CaphStone")
        self.gridLayout.addWidget(self.spin_Cost_CaphStone, 7, 2, 1, 1)
        self.lblCaphStonePic = QtWidgets.QLabel(self.widget_4)
        self.lblCaphStonePic.setMinimumSize(QtCore.QSize(32, 32))
        self.lblCaphStonePic.setMaximumSize(QtCore.QSize(32, 32))
        self.lblCaphStonePic.setText("")
        self.lblCaphStonePic.setObjectName("lblCaphStonePic")
        self.gridLayout.addWidget(self.lblCaphStonePic, 7, 0, 1, 1)
        self.verticalLayout_8.addWidget(self.widget_4)
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_5.addWidget(self.scrollArea)
        self.widget_5 = QtWidgets.QWidget(self.tab_mp)
        self.widget_5.setObjectName("widget_5")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout(self.widget_5)
        self.horizontalLayout_4.setContentsMargins(6, 6, 6, 6)
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.cmdMPUpdateMonnies = QtWidgets.QPushButton(self.widget_5)
        self.cmdMPUpdateMonnies.setEnabled(False)
        self.cmdMPUpdateMonnies.setObjectName("cmdMPUpdateMonnies")
        self.horizontalLayout_4.addWidget(self.cmdMPUpdateMonnies)
        self.cmdAdviceValks = QtWidgets.QPushButton(self.widget_5)
        self.cmdAdviceValks.setObjectName("cmdAdviceValks")
        self.horizontalLayout_4.addWidget(self.cmdAdviceValks)
        self.cmdNaderr = QtWidgets.QPushButton(self.widget_5)
        self.cmdNaderr.setObjectName("cmdNaderr")
        self.horizontalLayout_4.addWidget(self.cmdNaderr)
        self.cmdAlts = QtWidgets.QPushButton(self.widget_5)
        self.cmdAlts.setEnabled(True)
        self.cmdAlts.setObjectName("cmdAlts")
        self.horizontalLayout_4.addWidget(self.cmdAlts)
        self.verticalLayout_5.addWidget(self.widget_5)
        self.tabWidget.addTab(self.tab_mp, "")
        self.tab_fs_equip = QtWidgets.QWidget()
        self.tab_fs_equip.setObjectName("tab_fs_equip")
        self.verticalLayout_13 = QtWidgets.QVBoxLayout(self.tab_fs_equip)
        self.verticalLayout_13.setObjectName("verticalLayout_13")
        self.splitter_3 = QtWidgets.QSplitter(self.tab_fs_equip)
        self.splitter_3.setOrientation(QtCore.Qt.Horizontal)
        self.splitter_3.setObjectName("splitter_3")
        self.widget = QtWidgets.QWidget(self.splitter_3)
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.table_FS = TableFS(self.widget)
        self.table_FS.setAlternatingRowColors(True)
        self.table_FS.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.table_FS.setObjectName("table_FS")
        self.table_FS.setColumnCount(4)
        self.table_FS.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS.setHorizontalHeaderItem(3, item)
        self.table_FS.verticalHeader().setVisible(False)
        self.verticalLayout_2.addWidget(self.table_FS)
        self.widget_2 = QtWidgets.QWidget(self.splitter_3)
        self.widget_2.setObjectName("widget_2")
        self.verticalLayout_12 = QtWidgets.QVBoxLayout(self.widget_2)
        self.verticalLayout_12.setContentsMargins(2, 2, 2, 2)
        self.verticalLayout_12.setObjectName("verticalLayout_12")
        self.label_3 = QtWidgets.QLabel(self.widget_2)
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.verticalLayout_12.addWidget(self.label_3)
        self.treeFS_Secondary = TableFSSecondary(self.widget_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Expanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.treeFS_Secondary.sizePolicy().hasHeightForWidth())
        self.treeFS_Secondary.setSizePolicy(sizePolicy)
        self.treeFS_Secondary.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.treeFS_Secondary.setObjectName("treeFS_Secondary")
        self.verticalLayout_12.addWidget(self.treeFS_Secondary)
        self.verticalLayout_13.addWidget(self.splitter_3)
        self.tabWidget.addTab(self.tab_fs_equip, "")
        self.tab_FS = QtWidgets.QWidget()
        self.tab_FS.setObjectName("tab_FS")
        self.verticalLayout_4 = QtWidgets.QVBoxLayout(self.tab_FS)
        self.verticalLayout_4.setObjectName("verticalLayout_4")
        self.tabWidget_2 = QtWidgets.QTabWidget(self.tab_FS)
        self.tabWidget_2.setTabPosition(QtWidgets.QTabWidget.South)
        self.tabWidget_2.setObjectName("tabWidget_2")
        self.tab_fs_primary = QtWidgets.QWidget()
        self.tab_fs_primary.setObjectName("tab_fs_primary")
        self.verticalLayout_10 = QtWidgets.QVBoxLayout(self.tab_fs_primary)
        self.verticalLayout_10.setObjectName("verticalLayout_10")
        self.table_FS_Cost = TableFSCost(self.tab_fs_primary)
        self.table_FS_Cost.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_FS_Cost.setAlternatingRowColors(True)
        self.table_FS_Cost.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.table_FS_Cost.setObjectName("table_FS_Cost")
        self.table_FS_Cost.setColumnCount(6)
        self.table_FS_Cost.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost.setHorizontalHeaderItem(5, item)
        self.table_FS_Cost.verticalHeader().setVisible(False)
        self.verticalLayout_10.addWidget(self.table_FS_Cost)
        self.tabWidget_2.addTab(self.tab_fs_primary, "")
        self.tab_fs_secondary = QtWidgets.QWidget()
        self.tab_fs_secondary.setObjectName("tab_fs_secondary")
        self.verticalLayout_9 = QtWidgets.QVBoxLayout(self.tab_fs_secondary)
        self.verticalLayout_9.setObjectName("verticalLayout_9")
        self.splitter_4 = QtWidgets.QSplitter(self.tab_fs_secondary)
        self.splitter_4.setOrientation(QtCore.Qt.Vertical)
        self.splitter_4.setObjectName("splitter_4")
        self.table_FS_Cost_2 = QtWidgets.QTableWidget(self.splitter_4)
        self.table_FS_Cost_2.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_FS_Cost_2.setAlternatingRowColors(True)
        self.table_FS_Cost_2.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.table_FS_Cost_2.setObjectName("table_FS_Cost_2")
        self.table_FS_Cost_2.setColumnCount(6)
        self.table_FS_Cost_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_Cost_2.setHorizontalHeaderItem(5, item)
        self.table_FS_Cost_2.verticalHeader().setVisible(False)
        self.graphicsView = PlotWidget(self.splitter_4)
        self.graphicsView.setObjectName("graphicsView")
        self.verticalLayout_9.addWidget(self.splitter_4)
        self.tabWidget_2.addTab(self.tab_fs_secondary, "")
        self.verticalLayout_4.addWidget(self.tabWidget_2)
        self.tabWidget.addTab(self.tab_FS, "")
        self.tab_enhanceforprofit = QtWidgets.QWidget()
        self.tab_enhanceforprofit.setObjectName("tab_enhanceforprofit")
        self.verticalLayout_11 = QtWidgets.QVBoxLayout(self.tab_enhanceforprofit)
        self.verticalLayout_11.setObjectName("verticalLayout_11")
        self.table_FS_2 = QtWidgets.QTableWidget(self.tab_enhanceforprofit)
        self.table_FS_2.setAlternatingRowColors(True)
        self.table_FS_2.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.table_FS_2.setObjectName("table_FS_2")
        self.table_FS_2.setColumnCount(7)
        self.table_FS_2.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_FS_2.setHorizontalHeaderItem(6, item)
        self.table_FS_2.verticalHeader().setVisible(False)
        self.verticalLayout_11.addWidget(self.table_FS_2)
        self.tabWidget.addTab(self.tab_enhanceforprofit, "")
        self.tab_equip = QtWidgets.QWidget()
        self.tab_equip.setObjectName("tab_equip")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.tab_equip)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.table_Equip = TableEquipment(self.tab_equip)
        self.table_Equip.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_Equip.setAlternatingRowColors(True)
        self.table_Equip.setSelectionMode(QtWidgets.QAbstractItemView.ExtendedSelection)
        self.table_Equip.setObjectName("table_Equip")
        self.table_Equip.header().setCascadingSectionResizes(False)
        self.table_Equip.header().setStretchLastSection(False)
        self.verticalLayout_3.addWidget(self.table_Equip)
        self.tabWidget.addTab(self.tab_equip, "")
        self.tab_strat = QtWidgets.QWidget()
        self.tab_strat.setObjectName("tab_strat")
        self.verticalLayout_6 = QtWidgets.QVBoxLayout(self.tab_strat)
        self.verticalLayout_6.setObjectName("verticalLayout_6")
        self.splitter = QtWidgets.QSplitter(self.tab_strat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter.sizePolicy().hasHeightForWidth())
        self.splitter.setSizePolicy(sizePolicy)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.table_Strat = QtWidgets.QTableWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.table_Strat.sizePolicy().hasHeightForWidth())
        self.table_Strat.setSizePolicy(sizePolicy)
        self.table_Strat.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOn)
        self.table_Strat.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAsNeeded)
        self.table_Strat.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_Strat.setSelectionMode(QtWidgets.QAbstractItemView.SingleSelection)
        self.table_Strat.setSelectionBehavior(QtWidgets.QAbstractItemView.SelectRows)
        self.table_Strat.setObjectName("table_Strat")
        self.table_Strat.setColumnCount(3)
        self.table_Strat.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat.setHorizontalHeaderItem(2, item)
        self.table_Strat.verticalHeader().setVisible(False)
        self.widget_6 = QtWidgets.QWidget(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_6.sizePolicy().hasHeightForWidth())
        self.widget_6.setSizePolicy(sizePolicy)
        self.widget_6.setObjectName("widget_6")
        self.verticalLayout_7 = QtWidgets.QVBoxLayout(self.widget_6)
        self.verticalLayout_7.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_7.setSpacing(2)
        self.verticalLayout_7.setObjectName("verticalLayout_7")
        self.splitter_2 = QtWidgets.QSplitter(self.widget_6)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.splitter_2.sizePolicy().hasHeightForWidth())
        self.splitter_2.setSizePolicy(sizePolicy)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.table_Strat_FS = QtWidgets.QTableWidget(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.table_Strat_FS.sizePolicy().hasHeightForWidth())
        self.table_Strat_FS.setSizePolicy(sizePolicy)
        self.table_Strat_FS.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.table_Strat_FS.setAlternatingRowColors(True)
        self.table_Strat_FS.setObjectName("table_Strat_FS")
        self.table_Strat_FS.setColumnCount(3)
        self.table_Strat_FS.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_FS.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_FS.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_FS.setHorizontalHeaderItem(2, item)
        self.table_Strat_Equip = QtWidgets.QTableWidget(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.table_Strat_Equip.sizePolicy().hasHeightForWidth())
        self.table_Strat_Equip.setSizePolicy(sizePolicy)
        self.table_Strat_Equip.setAlternatingRowColors(True)
        self.table_Strat_Equip.setObjectName("table_Strat_Equip")
        self.table_Strat_Equip.setColumnCount(6)
        self.table_Strat_Equip.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.table_Strat_Equip.setHorizontalHeaderItem(5, item)
        self.verticalLayout_7.addWidget(self.splitter_2)
        self.verticalLayout_6.addWidget(self.splitter)
        self.widget_7 = QtWidgets.QWidget(self.tab_strat)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Maximum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.widget_7.sizePolicy().hasHeightForWidth())
        self.widget_7.setSizePolicy(sizePolicy)
        self.widget_7.setObjectName("widget_7")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.widget_7)
        self.horizontalLayout_5.setContentsMargins(6, 6, 6, 6)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.cmd_Strat_Graph = QtWidgets.QPushButton(self.widget_7)
        self.cmd_Strat_Graph.setEnabled(False)
        self.cmd_Strat_Graph.setObjectName("cmd_Strat_Graph")
        self.horizontalLayout_5.addWidget(self.cmd_Strat_Graph)
        self.cmdCompact = QtWidgets.QPushButton(self.widget_7)
        self.cmdCompact.setObjectName("cmdCompact")
        self.horizontalLayout_5.addWidget(self.cmdCompact)
        self.cmdStrat_go = QtWidgets.QPushButton(self.widget_7)
        self.cmdStrat_go.setObjectName("cmdStrat_go")
        self.horizontalLayout_5.addWidget(self.cmdStrat_go)
        self.verticalLayout_6.addWidget(self.widget_7)
        self.tabWidget.addTab(self.tab_strat, "")
        self.verticalLayout.addWidget(self.tabWidget)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 1124, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuHelp = QtWidgets.QMenu(self.menubar)
        self.menuHelp.setObjectName("menuHelp")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionExport_XLSX = QtWidgets.QAction(MainWindow)
        self.actionExport_XLSX.setEnabled(False)
        self.actionExport_XLSX.setObjectName("actionExport_XLSX")
        self.actionSave_Info = QtWidgets.QAction(MainWindow)
        self.actionSave_Info.setObjectName("actionSave_Info")
        self.actionLoad_Info = QtWidgets.QAction(MainWindow)
        self.actionLoad_Info.setObjectName("actionLoad_Info")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionFail_Stack_Graph = QtWidgets.QAction(MainWindow)
        self.actionFail_Stack_Graph.setEnabled(False)
        self.actionFail_Stack_Graph.setObjectName("actionFail_Stack_Graph")
        self.actionCost_Graph = QtWidgets.QAction(MainWindow)
        self.actionCost_Graph.setEnabled(False)
        self.actionCost_Graph.setObjectName("actionCost_Graph")
        self.actionEfficiency_Graph = QtWidgets.QAction(MainWindow)
        self.actionEfficiency_Graph.setEnabled(False)
        self.actionEfficiency_Graph.setObjectName("actionEfficiency_Graph")
        self.actionAbout = QtWidgets.QAction(MainWindow)
        self.actionAbout.setObjectName("actionAbout")
        self.actionGitHub_README = QtWidgets.QAction(MainWindow)
        self.actionGitHub_README.setObjectName("actionGitHub_README")
        self.actionWindow_Always_on_Top = QtWidgets.QAction(MainWindow)
        self.actionWindow_Always_on_Top.setCheckable(True)
        self.actionWindow_Always_on_Top.setObjectName("actionWindow_Always_on_Top")
        self.actionExport_CSV = QtWidgets.QAction(MainWindow)
        self.actionExport_CSV.setObjectName("actionExport_CSV")
        self.actionExport_Excel = QtWidgets.QAction(MainWindow)
        self.actionExport_Excel.setEnabled(False)
        self.actionExport_Excel.setObjectName("actionExport_Excel")
        self.actionMarket_Tax_Calc = QtWidgets.QAction(MainWindow)
        self.actionMarket_Tax_Calc.setObjectName("actionMarket_Tax_Calc")
        self.actionEnhancing_Profit = QtWidgets.QAction(MainWindow)
        self.actionEnhancing_Profit.setEnabled(False)
        self.actionEnhancing_Profit.setObjectName("actionEnhancing_Profit")
        self.actionSign_in_to_MP = QtWidgets.QAction(MainWindow)
        self.actionSign_in_to_MP.setObjectName("actionSign_in_to_MP")
        self.actionDownload_Latest = QtWidgets.QAction(MainWindow)
        self.actionDownload_Latest.setObjectName("actionDownload_Latest")
        self.actionGear_Type_Probability_Table = QtWidgets.QAction(MainWindow)
        self.actionGear_Type_Probability_Table.setObjectName("actionGear_Type_Probability_Table")
        self.actionOpen_Settings_Directory = QtWidgets.QAction(MainWindow)
        self.actionOpen_Settings_Directory.setObjectName("actionOpen_Settings_Directory")
        self.actionOpen_Log_File = QtWidgets.QAction(MainWindow)
        self.actionOpen_Log_File.setObjectName("actionOpen_Log_File")
        self.menuFile.addAction(self.actionSave_Info)
        self.menuFile.addAction(self.actionLoad_Info)
        self.menuFile.addAction(self.actionOpen_Settings_Directory)
        self.menuFile.addAction(self.actionOpen_Log_File)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExport_CSV)
        self.menuFile.addAction(self.actionExport_Excel)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuView.addAction(self.actionFail_Stack_Graph)
        self.menuView.addAction(self.actionCost_Graph)
        self.menuView.addAction(self.actionEfficiency_Graph)
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionWindow_Always_on_Top)
        self.menuHelp.addAction(self.actionAbout)
        self.menuHelp.addAction(self.actionGitHub_README)
        self.menuHelp.addAction(self.actionDownload_Latest)
        self.menuTools.addAction(self.actionGear_Type_Probability_Table)
        self.menuTools.addAction(self.actionMarket_Tax_Calc)
        self.menuTools.addAction(self.actionEnhancing_Profit)
        self.menuTools.addAction(self.actionSign_in_to_MP)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(4)
        self.tabWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Enhancement Optimizer"))
        self.lblDragonScale.setText(_translate("MainWindow", "Dragon Scale Cost"))
        self.lblBlackStoneWeapon.setText(_translate("MainWindow", "Black Stone (Weapon)"))
        self.lblHard.setText(_translate("MainWindow", "Hard Black Crystal Shard"))
        self.lblSharp.setText(_translate("MainWindow", "Sharp Black Crystal Shard"))
        self.lblBlackStoneArmor.setText(_translate("MainWindow", "Black Stone (Armor)"))
        self.lblQuestFSInc.setText(_translate("MainWindow", "Quest FS Increase"))
        self.chkMerchantsRing.setText(_translate("MainWindow", "Rich Merchant\'s Ring?"))
        self.lblConcBlackStoneWeapon.setText(_translate("MainWindow", "Concentrated Magical Blackstone (Weapon)"))
        self.lblGearCleanse.setText(_translate("MainWindow", "Gear Cleanse Cost"))
        self.lblConcBlackStoneArmor.setText(_translate("MainWindow", "Concentrated Magical Blackstone (Armor)"))
        self.lblMemoryFragment.setText(_translate("MainWindow", "Memory Fragment"))
        self.lblCronStone.setText(_translate("MainWindow", "Cron Stone"))
        self.chkValuePack.setText(_translate("MainWindow", "Value Pack Active?"))
        self.lblMarketTax.setText(_translate("MainWindow", "Market Tax"))
        self.lblCaphStone.setText(_translate("MainWindow", "Caphras Stone"))
        self.cmdMPUpdateMonnies.setText(_translate("MainWindow", "MP: Update Costs"))
        self.cmdAdviceValks.setText(_translate("MainWindow", "Manage Saved Failstacks"))
        self.cmdNaderr.setText(_translate("MainWindow", "Naderr\'s Band"))
        self.cmdAlts.setText(_translate("MainWindow", "Manage Alts/Toons"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_mp), _translate("MainWindow", "Materials / Settings"))
        self.label_2.setText(_translate("MainWindow", "Primary List (Low FS)"))
        item = self.table_FS.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.table_FS.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Gear Type"))
        item = self.table_FS.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Base Item Cost"))
        item = self.table_FS.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Target"))
        self.label_3.setText(_translate("MainWindow", "Secondary List (High FS)"))
        self.treeFS_Secondary.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.treeFS_Secondary.headerItem().setText(1, _translate("MainWindow", "Gear Type"))
        self.treeFS_Secondary.headerItem().setText(2, _translate("MainWindow", "Base Item Cost"))
        self.treeFS_Secondary.headerItem().setText(3, _translate("MainWindow", "Target"))
        self.treeFS_Secondary.headerItem().setText(4, _translate("MainWindow", "Range"))
        self.treeFS_Secondary.headerItem().setText(5, _translate("MainWindow", "Strat"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_fs_equip), _translate("MainWindow", "FS Gear"))
        item = self.table_FS_Cost.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "FS"))
        item = self.table_FS_Cost.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Gear"))
        item = self.table_FS_Cost.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Cost"))
        item = self.table_FS_Cost.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Cumulative Cost"))
        item = self.table_FS_Cost.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Probability"))
        item = self.table_FS_Cost.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Cumulative Probability"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_fs_primary), _translate("MainWindow", "Primary List (Step 1)"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "FS"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Gear"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Cost"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Cumulitive Cost"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Probability"))
        item = self.table_FS_Cost_2.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Cumulitive Probability"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.tab_fs_secondary), _translate("MainWindow", "Secondary List (Step 2 - Optimization)"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_FS), _translate("MainWindow", "FS Cost"))
        item = self.table_FS_2.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Name"))
        item = self.table_FS_2.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Gear Type"))
        item = self.table_FS_2.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Base Item Cost"))
        item = self.table_FS_2.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Target"))
        item = self.table_FS_2.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Sale Success"))
        item = self.table_FS_2.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Sale Fail"))
        item = self.table_FS_2.horizontalHeaderItem(6)
        item.setText(_translate("MainWindow", "Procurement Cost"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_enhanceforprofit), _translate("MainWindow", "For-Profit"))
        self.table_Equip.headerItem().setText(0, _translate("MainWindow", "Name"))
        self.table_Equip.headerItem().setText(1, _translate("MainWindow", "Gear Type"))
        self.table_Equip.headerItem().setText(2, _translate("MainWindow", "Base Cost"))
        self.table_Equip.headerItem().setText(3, _translate("MainWindow", "Target"))
        self.table_Equip.headerItem().setText(4, _translate("MainWindow", "Cronstone"))
        self.table_Equip.headerItem().setText(5, _translate("MainWindow", "FS"))
        self.table_Equip.headerItem().setText(6, _translate("MainWindow", "Cost"))
        self.table_Equip.headerItem().setText(7, _translate("MainWindow", "Mat Cost"))
        self.table_Equip.headerItem().setText(8, _translate("MainWindow", "Num Fails"))
        self.table_Equip.headerItem().setText(9, _translate("MainWindow", "Probability"))
        self.table_Equip.headerItem().setText(10, _translate("MainWindow", "Uses Memfrags"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_equip), _translate("MainWindow", "Equipment"))
        item = self.table_Strat.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "FS"))
        item = self.table_Strat.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Item"))
        item = self.table_Strat.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Attempt?"))
        item = self.table_Strat_FS.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Item"))
        item = self.table_Strat_FS.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Cost Balance"))
        item = self.table_Strat_FS.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Effectiveness"))
        item = self.table_Strat_Equip.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "Item"))
        item = self.table_Strat_Equip.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Cost Balance"))
        item = self.table_Strat_Equip.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Loss Prevention"))
        item = self.table_Strat_Equip.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Avg Num Fails"))
        item = self.table_Strat_Equip.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Success Confidence"))
        item = self.table_Strat_Equip.horizontalHeaderItem(5)
        item.setText(_translate("MainWindow", "Differential"))
        self.cmd_Strat_Graph.setText(_translate("MainWindow", "Graphs"))
        self.cmdCompact.setText(_translate("MainWindow", "Open Guide Overlay"))
        self.cmdStrat_go.setText(_translate("MainWindow", "Calculate"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_strat), _translate("MainWindow", "Strategy"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuHelp.setTitle(_translate("MainWindow", "Help"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionExport_XLSX.setText(_translate("MainWindow", "Export XLSX"))
        self.actionSave_Info.setText(_translate("MainWindow", "Save Info"))
        self.actionLoad_Info.setText(_translate("MainWindow", "Load Info"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionFail_Stack_Graph.setText(_translate("MainWindow", "Fail Stack Graph"))
        self.actionCost_Graph.setText(_translate("MainWindow", "Cost Graph"))
        self.actionEfficiency_Graph.setText(_translate("MainWindow", "Efficiency Graph"))
        self.actionAbout.setText(_translate("MainWindow", "About"))
        self.actionGitHub_README.setText(_translate("MainWindow", "GitHub - README"))
        self.actionWindow_Always_on_Top.setText(_translate("MainWindow", "Window Always on Top"))
        self.actionExport_CSV.setText(_translate("MainWindow", "Export CSV"))
        self.actionExport_Excel.setText(_translate("MainWindow", "Export Excel"))
        self.actionMarket_Tax_Calc.setText(_translate("MainWindow", "Market Tax Calc"))
        self.actionEnhancing_Profit.setText(_translate("MainWindow", "Enhancing Profit"))
        self.actionSign_in_to_MP.setText(_translate("MainWindow", "Sign in to MP"))
        self.actionDownload_Latest.setText(_translate("MainWindow", "Download Updates"))
        self.actionGear_Type_Probability_Table.setText(_translate("MainWindow", "Gear Types / Probability Tables"))
        self.actionOpen_Settings_Directory.setText(_translate("MainWindow", "Open Settings Directory"))
        self.actionOpen_Log_File.setText(_translate("MainWindow", "Open Log File"))

from BDO_Enhancement_Tool.QtCommon.Qt_common import NoScrollSpin, NonScrollDoubleSpin
from BDO_Enhancement_Tool.Widgets.TreeEquipment import TableEquipment
from BDO_Enhancement_Tool.Widgets.tableFS import TableFS
from BDO_Enhancement_Tool.Widgets.tableFS_Cost import TableFSCost
from BDO_Enhancement_Tool.Widgets.table_FS_Secondary import TableFSSecondary
from pyqtgraph import PlotWidget
